#include <Keypad.h> //keypad
const byte ROWS = 4;//four rows
const byte COLS = 4;//four columns
//define the cymbols on the buttons of the keypads
char hexaKeys[ROWS][COLS] =
                           {  {'0','1','2','3'},
                              {'4','5','6','7'},
                              {'8','9','+','-'},
                              {'*','/','=','R'} };
byte rowPins[ROWS] = {4,5,6,7};            //connect to the row pinouts of the keypad
byte colPins[COLS] = {8,9,10,11};           //connect to the column pinouts of the keypad
//initialize an instance of class NewKeypad
Keypad customKeypad = Keypad( makeKeymap(hexaKeys), rowPins, colPins, ROWS, COLS);
//////////////////////////// 7段顯示器 設定部分 /////////////////////////////////////////////////////
int col[]={47,49,51,53};
int row[]={38,40,42,44,46,48,50,52};
int TAB[]={0xC0,0xF9,0xA4,0xB0,0x99,0x92,0x82,0xF8,
    0x80,0x90,0x88,0x83,0xC6,0xA1,0x86,0x8E,0xC0,0x89}; 

void setup() 
{
  Serial.begin(115200); //通訊鲍率設定
  ///////////////7段顯示器 設定部分////////////////////// 
  for(int i = 0;i <4;i++)
  {
    pinMode(col[i],OUTPUT);
    digitalWrite(col[i],HIGH);
  }
  for(int j =0;j <8;j++)
  { 
    pinMode(row[j],OUTPUT);
    digitalWrite(row[j],HIGH);
  }  
////////////////7段顯示器 設定部分/////////////////////////////////////  
}
void print_now(){
    for(int )
    for(int k=0; k<8 ;k++){           
      digitalWrite(row[k],TAB[n]>>k & 0x01);
    } 
    //Serial.println(c); 
}
char now[4]={'-','-','-','-'};
int left_num=0;
int right_num=0;
bool is_left=1;
bool has_op=0;
char op='?';
int num[2]={0,0};
int n_index=0;
void reset(){
  left_num=0;
  right_num=0;
  is_left=1;
  has_op=0;
  op='?';
  num[0]=0;
  num[1]=0;
  n_index=0;
}
void calculate(){
  switch(op){
    case '+';
      left_num+=right_num;
      break;
    case '-';
      left_num-=right_num;
      break;
    case '*';
      left_num*=right_num;
      break;
    case '/';
      left_num/=right_num;
      break;
  }  
}
void input(char c){
  if(c>='0'&&c<='9'){
    if(n_index==2){
      prompt();
      reset();
    }
    num[n_index++]=c-'0';
  }
  else {
    if(n_index==0){
      prompt();
      reset();
    }
    else {
      if(is_left){
        left_num=num[0]*10+num[1];  
      }else{
        right_num=num[0]*10+num[1];  
      }
      num[0]=0;
      num[1]=0;
    }
    n_index=0;
    switch(c)
    {
      case 'R';
        reset();
        break;
      case '+';
        if(has_op){
          prompt();
          reset();
          return;
        }
        has_op=1;
        is_left=0;
        op='+';
        break;
      case '-';
        if(has_op){
          prompt();
          reset();
          return;
        }
        has_op=1;
        is_left=0;
        op='-';
        break;
      case '*';
        if(has_op){
          prompt();
          reset();
          return;
        }
        has_op=1;
        is_left=0;
        op='*';
        break;
      case '/';
        if(has_op){
          prompt();
          reset();
          return;
        }
        has_op=1;
        is_left=0;
        op='/';
        break;
      case '=';
        calculate();
    }
  }
}
void loop()
{   
    while(true){
      print_now();
      char customKey = customKeypad.getKey();
      if(customKey)
      {
        input(customKey);
        break;
      }  
    }
}
